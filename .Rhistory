ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=as.Date(date_formatted),y=positive,col="observed")) + geom_point() + geom_point(aes(x=date,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
state_testing_data_d_pos$date_formatted
typeof(state_testing_data_d_pos$date_formatted)
as.Date(state_testing_data_d_pos$date_formatted,format="y%m%d")
state_testing_data_d_pos$date_formatted <- as.Date(state_testing_data_d_pos$date_formatted,format="y%m%d")
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),]
state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),]
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date-formatted,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c("VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date_formatted,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c(as.vector(sample(state_testing_data_d_pos$state,8)),"VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date_formatted,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
model <- "
model {
region_noise ~ dgamma(1,1)
# overall cfr
logit_cfr ~ dnorm(-4.329721,10)
# region specific deviation
for (r in 1:35){
logit_cfr_r[r] ~ dnorm(logit_cfr,1)
logit(p_cfr[r]) <- logit_cfr_r[r]
}
cfr_p <- 1/(1+exp(-logit_cfr))
for (i in 1:N){
cfr_obs[i] ~ dbeta(1000*p_cfr[r_idx[i]],1000*(1-p_cfr[r_idx[i]]))
N_true[i] <- death[i]/(1/(1+exp(-logit_cfr)))
}
}"
#subset to some deaths
state_testing_data$date_formatted <- lapply(state_testing_data$date,function(x){
year <- substr(x,1,4)
month <- substr(x,5,6)
day <- substr(x,7,9)
return(as.Date(paste0(year,"/",month,"/",day)))
})
state_testing_data$date_formatted <- unlist(lapply(state_testing_data$date,function(x){
year <- substr(x,1,4)
month <- substr(x,5,6)
day <- substr(x,7,8)
return (paste0(year,"/",month,"/",day))
}))
state_testing_data$date_formatted <- as.Date(state_testing_data$date_formatted)
state_testing_data_d_pos <- state_testing_data[state_testing_data$death >0,]
state_testing_data_d_pos <- state_testing_data_d_pos[,c(1:4,6:ncol(state_testing_data))]
state_testing_data_d_pos <- state_testing_data_d_pos[complete.cases(state_testing_data_d_pos),]
state_testing_data_d_pos$state <- factor(state_testing_data_d_pos$state,unique(state_testing_data_d_pos$state))
dat <- list(r_idx = as.numeric(state_testing_data_d_pos$state),cfr_obs = state_testing_data_d_pos$death/state_testing_data_d_pos$positive,N=nrow(state_testing_data_d_pos),
death=state_testing_data_d_pos$death,confirmed=state_testing_data_d_pos$positive)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('p_cfr','N_true','cfr','logit_cfr'), 3000, 3)
state_testing_data_d_pos$estimated_true <- rowMeans(out_jags$N_true)
state_testing_data_d_pos$estimated_true - state_testing_data_d_pos$positive
state_testing_data_d_pos$date_formatted <- as.Date(state_testing_data_d_pos$date_formatted,format="y%m%d")
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state %in% c(as.vector(sample(state_testing_data_d_pos$state,8)),"VT"),],aes(x=date_formatted,y=positive,col="observed")) + geom_point() + geom_point(aes(x=date_formatted,y=estimated_true,col='estimated')) +facet_wrap(~state,scales = "free") + theme_bw()
plot_df <- data.frame(x=rep(levels(state_testing_data_d_pos$state),each=1000),y=c(t(matrix(out_jags$p_cfr,nrow=35,byrow=F))))
ggplot(plot_df,aes(x=x,y=y)) +stat_summary(fun.data = "mean_cl_boot", colour = "red", size = .1) + coord_flip() + theme_bw()+ theme(axis.text.y = element_text(color = "grey20", size = 5, angle = 0, hjust = .5, vjust = .5, face = "plain")) + geom_hline(yintercept  =.0123) + geom_hline(yintercept  =.0153) + ylab("CFR") + xlab("State")
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive)) + geom_point() + geom_point(aes(x=date_formatted,y=death))
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive)) + geom_point() + geom_point(aes(x=date_formatted,y=death)) + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive,col='positive')) + geom_point() + geom_point(aes(x=date_formatted,y=death,col='death')) + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive,col='positive')) + geom_point() + geom_point(aes(x=date_formatted,y=death*10000,col='death')) + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive,col='positive')) + geom_point() + geom_point(aes(x=date_formatted,y=death*1000,col='death')) + theme_bw()
ggplot(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",],aes(x=date_formatted,y=positive,col='positive')) + geom_point() + geom_point(aes(x=date_formatted,y=death*100,col='death')) + theme_bw()
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$date_formatted
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
state_testing_data_d_pos <- state_testing_data_d_pos[,c(1:4,6:ncol(state_testing_data))]
state_testing_data_d_pos <- state_testing_data_d_pos[complete.cases(state_testing_data_d_pos),]
state_testing_data_d_pos$state <- factor(state_testing_data_d_pos$state,unique(state_testing_data_d_pos$state))
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$date_formatted
state_testing_data
state_testing_data$date_formatted
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
state_testing_data_d_pos$date_formatted
state_testing_data_d_pos <- state_testing_data_d_pos[,c(1:4,6:ncol(state_testing_data))]
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$date_formatted
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$deaths
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
tail(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death,1)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death,1)
state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive,13)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death,1)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive,13)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death,1)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive,13)
head(state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death,1)
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$deaths
positive_cases
deaths
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
deaths
length(deaths)
head(positive_cases,13)
deaths
head(positive_cases,13)
head(positive_cases,13)[13]
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
deaths ~ dbinom(cfr,positive)
}"
#subset to some deaths
state_testing_data$date_formatted <- lapply(state_testing_data$date,function(x){
year <- substr(x,1,4)
month <- substr(x,5,6)
day <- substr(x,7,9)
return(as.Date(paste0(year,"/",month,"/",day)))
})
state_testing_data$date_formatted <- unlist(lapply(state_testing_data$date,function(x){
year <- substr(x,1,4)
month <- substr(x,5,6)
day <- substr(x,7,8)
return (paste0(year,"/",month,"/",day))
}))
state_testing_data$date_formatted <- as.Date(state_testing_data$date_formatted)
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
positive_latent ~ dpoise(positive)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
positive_latent ~ dpois(positive)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
out_jags$positive_latent
out_jags$positive_latent positive
dat$positive
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
positive_latent ~ dnorm(positive,.01)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma ~ dgamma(1,1)
r <- mu^2/(sigma-mu)
p <- r/(mu+r)
positive_latent ~ dnbinom(p,r)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- r/(mu+r)
positive_latent ~ dnbinom(p,r)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- r/(mu+r)
positive_latent ~ dnbinom(r,p)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- r/(mu+r)
positive_latent ~ dnegbin(r,p)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- r/(mu+r)
positive_latent ~ dnegbin(p,r)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- (sigma^2-mu)/(sigma^2)
positive_latent ~ dnegbin(p,r)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
mu <- positive
sigma  <- 1
r <- mu^2/(sigma-mu)
p <- (mu)/(sigma^2)
positive_latent ~ dnegbin(p,r)
deaths ~ dbinom(cfr,positive_latent)
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
cfr ~ dbeta(100*.013,100*(1-.013))
positive_latent ~ dnorm(positive,.01)
deaths ~ dbinom(cfr,round(positive_latent))
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
out_jags$positive_latent
dat$positive
model <- "
model {
cfr ~ dbeta(1000*.013,1000*(1-.013))
positive_latent ~ dnorm(positive,.00001)
deaths ~ dbinom(cfr,round(positive_latent))
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = head(positive_cases,13)[13],deaths=head(deaths,1))
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
out_jags$positive_latent
dat$positive
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths)
rbinom(1000,21,.5)
mean(rbinom(1000,21,.5))
mean(rbinom(1000,21,.75))
rbinom(1000,21,.75)
hosp_data <- download_and_preprocess_hosp_data()
state_testing_data <- read.csv("/Users/gcgibson/Downloads/states-daily.csv")
counties_testing_data <- read.csv("/Users/gcgibson/Downloads/counties.csv")
library(ggplot2)
state_testing_data <- read.csv("/Users/gcgibson/Downloads/states-daily.csv")
counties_testing_data <- read.csv("/Users/gcgibson/Downloads/counties.csv")
library(ggplot2)
state_testing_data$date_formatted <- as.Date(state_testing_data$dateChecked)
state_testing_data$date_formatted <- unlist(lapply(state_testing_data$date,function(x){
year <- substr(x,1,4)
month <- substr(x,5,6)
day <- substr(x,7,8)
return (paste0(year,"/",month,"/",day))
}))
state_testing_data$date_formatted <- as.Date(state_testing_data$date_formatted)
library(R2jags)
library(rjags)
model <- "
model {
# integer valued delay model based on previous studies
onset_to_death ~ rbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i] ~ rbinom(cfr,positive_latent[i-min(28,onset_to_death)])
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+28)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
# integer valued delay model based on previous studies
onset_to_death ~ rbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ rbinom(cfr,positive_latent[i-min(28,onset_to_death)])
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+28)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
# integer valued delay model based on previous studies
onset_to_death ~ rbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ dbinom(cfr,positive_latent[i-min(28,onset_to_death)])
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
# integer valued delay model based on previous studies
onset_to_death ~ dbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ dbinom(cfr,positive_latent[i-min(28,onset_to_death)])
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
#
positive_latent[1] ~ dnorm(1000,.01)
for (i in 2:N){
positive_latent[i] ~ dnorm(positive_latent[i-1],.01)
}
# integer valued delay model based on previous studies
onset_to_death ~ dbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ dbinom(cfr,positive_latent[i-min(28,onset_to_death)])
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
model <- "
model {
#
positive_latent[1] ~ dnorm(1000,.01)
for (i in 2:N){
positive_latent[i] ~ dnorm(positive_latent[i-1],.01)
}
# integer valued delay model based on previous studies
onset_to_death ~ dbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ dbinom(cfr,round(positive_latent[i-min(28,onset_to_death)]))
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
out_jags$positive_latent
deaths
out_jags$positive_latent[28:length(out_jags$positive_latent)]
rowMeans(out_jags$positive_latent)
rowMeans(out_jags$positive_latent)[28:length(rowMeans(out_jags$positive_latent))]
rowMeans(out_jags$positive_latent)[1:28]
deaths
rowMeans(out_jags$positive_latent)[1:length(deaths)]
deaths
model <- "
model {
#
positive_latent[1] ~ dnorm(1000,.000001)
for (i in 2:N){
positive_latent[i] ~ dnorm(positive_latent[i-1],.000001)
}
# integer valued delay model based on previous studies
onset_to_death ~ dbinom(.75,21)
cfr ~ dbeta(1000*.013,1000*(1-.013))
for (i in 28:N){
deaths[i-27] ~ dbinom(cfr,round(positive_latent[i-min(28,onset_to_death)]))
}
}"
state_testing_data_d_pos <- state_testing_data#[state_testing_data$death >0,]
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
rowMeans(out_jags$positive_latent)[1:length(deaths)]
deaths
state_testing_data_d_pos
state_testing_data_d_pos$date_formatted
state_testing_data_d_pos <- rev(state_testing_data_d_pos)
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
deaths
library(dplyr)
state_testing_data_d_pos <- state_testing_data_d_pos %>% dplyr::arrange(date_formatted)
positive_cases <- state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$positive
deaths <-state_testing_data_d_pos[state_testing_data_d_pos$state == "NY",]$death
deaths
dat <- list(positive = positive_cases,deaths=deaths,N=length(deaths)+27)
## add to dataframe
jgs <- jags.model(file = textConnection(model), data = dat, n.adapt = 1000)
update(jgs, 1000)
out_jags <- jags.samples(jgs, c('positive_latent'), 3000, 3)
rowMeans(out_jags$positive_latent)[1:length(deaths)]
deaths
rowMeans(out_jags$positive_latent)
tail(rowMeans(out_jags$positive_latent))
length(deaths)
length(deaths)+27
52-27
tail(rowMeans(out_jags$positive_latent),28:length(rowMeans(out_jags$positive_latent)))
rowMeans(out_jags$positive_latent[28:length(rowMeans(out_jags$positive_latent))]
rowMeans(out_jags$positive_latent)[28:length(rowMeans(out_jags$positive_latent))]
rowMeans(out_jags$positive_latent)[28:length(rowMeans(out_jags$positive_latent))
52-min(2))
asf
rowMeans(out_jags$positive_latent)[28:length(rowMeans(out_jags$positive_latent))]
deaths
var(rgamma(1000,1,2))
var(rgamma(1000,10*1,10*2))
var(rgamma(1000,2*1,2*2))
